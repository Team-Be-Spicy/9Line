name: CICD

on:
  push:
    branches: [ main ]

  workflow_dispatch:

env:
  MYSQL_VERSION: 5.7
  MYSQL_DB: nineline
  MYSQL_USER: root
  MYSQL_PASSWORD: root
  # Java
  JAVA_VERSION: 17
  # DockerHub
  DOCKER_HUB_USERNAME: egorkra
  # AWS & Elastic Bean Stalk
  AWS_REGION: us-east-2
  EB_ENVIRONMENT_NAME: Acb-env
  EB_APPLICATION_NAME: ACB
  EB_DEPLOYMENT_PACKAGE: elasticbeanstalk/docker-compose.yaml

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.MYSQL_DB }};' -u${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }}
          mysql -e 'ALTER USER "'"root"'"@"'"localhost"'" IDENTIFIED BY "'"password"'";' -uroot -proot
      - uses: actions/checkout@v2

      - name: Setup Java JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build Number
        id: build-number
        run: echo "::set-output name=BUILD_NUMBER::$(date '+%-d.%-m.%Y.%-H.%-M.%-S')"

      - name: Docker Login
        uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Maven Clean Package and Push to Dockerhub
        run: |
          ./mvnw --no-transfer-progress clean package \
            -P build-frontend \
            -P jib-push-to-dockerhub \
              -Dapp.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}}

#      - name: Update and commit app version in docker-compose.yaml
#        run: |
#          BUILD_NUMBER=${{steps.build-number.outputs.BUILD_NUMBER}}
#          echo -e "Current elasticbeanstalk/docker-compose.yml\n$(cat elasticbeanstalk/docker-compose.yml)"
#          sed -i -E 's_(egorkra/nineline:)([^"]*)_\1'${BUILD_NUMBER}'_' elasticbeanstalk/docker-compose.yml
#          echo -e "Current elasticbeanstalk/docker-compose.yml\n$(cat elasticbeanstalk/docker-compose.yml)"
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git add elasticbeanstalk/docker-compose.yml
#          git commit -m "new app version: ${BUILD_NUMBER}"
#          git push

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@ebe3476a4ce991d54336935e75e78dd9d86f9408
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          deployment_package: ${{ env.EB_DEPLOYMENT_PACKAGE }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: Version ${{steps.build-number.outputs.BUILD_NUMBER}} deployed via github actions ${{ github.sha }}
          wait_for_deployment: 60
      - name: Google Chat Notification
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: Deploy
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: ${{ job.status }}
        if: always()